
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =====================================================================
    // Helper Functions
    // =====================================================================
    function isAuthenticated() {
      return request.auth != null;
    }

    // =====================================================================
    // User and Username Collections
    // =====================================================================
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if request.auth.uid == userId;
    }

    match /usernames/{username} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
    }

    // =====================================================================
    // Groups Collection
    // =====================================================================
    match /groups/{groupId} {

      // --- Group Permissions ---

      // LIST: Allow authenticated users to perform queries.
      // This is essential for the dashboard to find user's groups and for the
      // "join with code" feature to find a group by its invite code.
      // The `where` clauses in the client-side code handle the actual filtering.
      allow list: if isAuthenticated();

      // GET: Restrict reading a single document's full data.
      // A user can only get a group's details if they are a member and the group is not expired.
      allow get: if isAuthenticated()
                  && resource.data.memberUserIds.hasAny([request.auth.uid])
                  && resource.data.selfDestructAt > request.time;

      // CREATE: A user can create a group if they are authenticated and set themselves as the owner.
      allow create: if isAuthenticated()
                     && request.resource.data.ownerId == request.auth.uid;

      // UPDATE: Allow a non-member to add themselves to the members list if the group is active.
      // This is the core rule for "Join with Code".
      allow update: if isAuthenticated()
                     && request.resource.data.selfDestructAt > request.time
                     && request.resource.data.memberUserIds.hasAll(resource.data.memberUserIds)
                     && request.resource.data.memberUserIds.size() == resource.data.memberUserIds.size() + 1
                     && !resource.data.memberUserIds.hasAny([request.auth.uid])
                     && request.auth.uid in request.resource.data.memberUserIds;

      // DELETE: Only the group owner can delete it.
      allow delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;


      // =====================================================================
      // Messages Subcollection
      // =====================================================================
      match /messages/{messageId} {

        // Helper to check if the current user is a member of the parent group.
        // It uses `get()` to read the parent group's data for the check.
        function isGroupMember() {
          let groupData = get(/databases/$(database)/documents/groups/$(groupId)).data;
          return request.auth.uid in groupData.memberUserIds;
        }

        // READ, CREATE: Only members of the group can read or create messages.
        allow read, create: if isAuthenticated() && isGroupMember();

        // UPDATE, DELETE: Disallow for now to keep messages immutable.
        allow update, delete: if false;
      }
    }
  }
}
