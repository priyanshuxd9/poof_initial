rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // HELPER FUNCTIONS
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isGroupMember(groupId) {
      let group = get(/databases/$(database)/documents/groups/$(groupId));
      // Ensure group exists and user is a member
      return exists(/databases/$(database)/documents/groups/$(groupId)) && 
             request.auth.uid in group.data.memberUserIds;
    }
    
    function isGroupOwner(groupId) {
       let group = get(/databases/$(database)/documents/groups/$(groupId));
       // Ensure group exists and user is the owner
       return exists(/databases/$(database)/documents/groups/$(groupId)) &&
              request.auth.uid == group.data.ownerId;
    }
    
    // USER DATA
    // Users can only read/write their own document.
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if isAuth() && isOwner(userId);
    }

    // USERNAMES
    // Usernames must be unique. This is enforced by app logic using a transaction/batch.
    match /usernames/{username} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.uid == request.auth.uid;
      allow delete: if isAuth() && get(/databases/$(database)/documents/usernames/$(username)).data.uid == request.auth.uid;
    }

    // GROUPS
    match /groups/{groupId} {
      // Must be authenticated to create a group, and must be the owner listed in the new document.
      allow create: if isAuth() && isOwner(request.resource.data.ownerId);

      // Must be a member to read group data.
      allow read: if isGroupMember(groupId);
      
      // Allow updates by the owner OR by a user joining/leaving.
      // App logic handles the specific permissions for these actions.
      allow update: if isAuth();
    }

    // MESSAGES
    match /groups/{groupId}/messages/{messageId} {
      allow list, get: if isGroupMember(groupId);
      
      // A user must be a member to create any message.
      // A user can create a message for themselves (senderId matches their uid).
      // A user can also create a "system" message (e.g., for joining or leaving).
      allow create: if isGroupMember(groupId) && 
                     (request.resource.data.senderId == request.auth.uid || request.resource.data.senderId == 'system');
    }
  }
}
