rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // User profile pictures: Only the user can write to their own avatar path.
    match /user-avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId && resource.size < 2 * 1024 * 1024 && resource.contentType.matches('image/.*');
    }
    
    // Group avatars: Only the group owner can write to the group's avatar path.
    match /group-avatars/{groupId}/{fileName} {
        allow read: if true;
        allow write: if request.auth != null &&
                     exists(/databases/$(database)/documents/groups/$(groupId)) &&
                     get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId == request.auth.uid &&
                     resource.size < 2 * 1024 * 1024 && // 2 MB limit
                     resource.contentType.matches('image/.*');
    }
    
    // Group media files (images/videos)
    match /group-media/{groupId}/{fileId} {
        allow read: if request.auth != null &&
                    exists(/databases/$(database)/documents/groups/$(groupId)) &&
                    request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;

        allow write: if request.auth != null &&
                     exists(/databases/$(database)/documents/groups/$(groupId)) &&
                     request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds &&
                     resource.size < 30 * 1024 * 1024 && // 30 MB limit
                     (resource.contentType.matches('image/.*') || resource.contentType.matches('video/.*'));
    }
  }
}
