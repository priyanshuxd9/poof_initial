
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check group membership from Firestore
    function isGroupMember(groupId) {
      return request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }
    
    // Profile pictures: users can only read/write their own
    match /user-avatars/{userId}/avatar.jpg {
      allow read: if request.auth != null; // Anyone logged in can see profile pics
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Group icons: only group owner can write
    match /group-avatars/{groupId}/avatar.jpg {
       allow read: if request.auth != null; // Anyone logged in can see group icons
       allow write: if request.auth != null && get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId == request.auth.uid;
    }

    // Group media: only group members can read/write, with size and type validation
    match /group-media/{groupId}/{allPaths=**} {
      allow read: if request.auth != null && isGroupMember(groupId);
      allow write: if request.auth != null && isGroupMember(groupId) 
                   && request.resource.size < 30 * 1024 * 1024 // Max 30MB
                   && (request.resource.contentType.matches('image/.*') || request.resource.contentType.matches('video/.*'));
    }
  }
}
