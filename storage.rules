rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Utility: check if user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Utility: check if user is a member of the group
    function isGroupMember(groupId) {
      return isSignedIn() &&
             exists(/databases/$(database)/documents/groups/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }

    // USER AVATARS: Publicly readable, only the user can write
    match /user-avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // GROUP AVATARS: Publicly readable, only the group owner can write
    match /group-avatars/{ownerId}/{groupId}/{allPaths=**} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == ownerId;
    }

    // GROUP MEDIA: Only authenticated group members can read/write
    match /group-media/{groupId}/{allPaths=**} {
      allow read, write: if isGroupMember(groupId);
    }
  }
}