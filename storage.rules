rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // ========== USER AVATARS ==========
    // Path: user-avatars/{userId}/avatar.jpg
    // A user can only read/write their own avatar.
    match /user-avatars/{userId}/{fileName} {
      allow read: if true; // Publicly readable
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // ========== GROUP ICONS ==========
    // Path: group-avatars/{ownerId}/{groupId}/avatar.jpg
    match /group-avatars/{ownerId}/{groupId}/{fileName} {
        allow read: if true; // Publicly readable
        // Allow write only if the user making the request is the owner specified in the path.
        // This is secure for creation (path must match user) and updates.
        allow write: if isSignedIn() && request.auth.uid == ownerId;
    }
    
    // ========== GROUP MEDIA (Images/Videos) ==========
    // Path: group-media/{groupId}/{fileId}
    // A user can read/write media if they are a member of the group.
    match /group-media/{groupId}/{fileName} {
      allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }
  }
}
