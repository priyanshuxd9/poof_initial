
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is a member of a group.
    function isGroupMember(groupId) {
      return request.auth != null && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }

    // Rules for User Profile Pictures
    match /user-avatars/{userId}/avatar.jpg {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for Group Avatars
    match /group-avatars/{groupId}/avatar.jpg {
      allow read: if isGroupMember(groupId);
      // Only the group owner can change the icon.
      allow write: if request.auth != null && get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId == request.auth.uid;
    }
    
    // Rules for Group Media (Images/Videos)
    match /group-media/{groupId}/{fileId} {
      allow read: if isGroupMember(groupId);

      // Only allow group members to create new files,
      // and enforce size and type limits.
      allow create: if isGroupMember(groupId)
                    && request.resource.size < 30 * 1024 * 1024 // 30MB limit
                    && (
                      request.resource.contentType.matches('image/.*') ||
                      request.resource.contentType.matches('video/.*')
                    );
      
      // Do not allow users to update or delete media directly from the client.
      allow update, delete: if false;
    }
  }
}
