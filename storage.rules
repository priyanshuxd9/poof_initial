rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    function isGroupMember(groupId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/groups/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }

    function isGroupOwner(groupId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/groups/$(groupId)) &&
             request.auth.uid == get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId;
    }
    
    // User profile pictures
    match /user-avatars/{userId}/avatar.jpg {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Group icons
    match /group-avatars/{groupId}/avatar.jpg {
      allow read;
      allow write: if isGroupOwner(groupId);
    }

    // Group media (images/videos)
    match /group-media/{groupId}/{allPaths=**} {
      allow read, write: if isGroupMember(groupId);
    }
  }
}
