
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // User Avatars: Allow users to read/write their own avatar.
    match /user-avatars/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Group Avatars: Allow the group owner to upload an icon.
    // The path includes the owner's UID, which we can check directly.
    match /group-avatars/{ownerId}/{groupId}/avatar.jpg {
       allow read;
       allow write: if request.auth != null && request.auth.uid == ownerId;
    }

    // Group Media Files:
    // READ: Allow if the user is a member of the group.
    // WRITE: Allow if the user is authenticated and their UID is in the file path.
    // This avoids race conditions with Firestore 'get' calls on write.
    match /group-media/{groupId}/{userId}/{fileId} {
        allow read: if request.auth != null && get(/databases/(default)/documents/groups/$(groupId)).data.memberUserIds.has(request.auth.uid);
        allow write: if request.auth != null && request.auth.uid == userId && request.resource.size < 5 * 1024 * 1024;
    }
  }
}
