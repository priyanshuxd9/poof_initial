
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // User Avatars: Only the owner can upload/update their own avatar. Anyone can read.
    match /user-avatars/{userId}/{allPaths=**} {
      allow read;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Group Avatars: Only the group owner can create/update. Anyone can read.
    match /group-avatars/{ownerId}/{groupId}/{allPaths=**} {
        allow read;
        allow write: if isSignedIn() && request.auth.uid == ownerId;
    }

    // Group Media:
    // - WRITE: A user can only write to their own subfolder within a group's media folder.
    // - READ: Any member of the group can read any file in the group's media folder.
    match /group-media/{groupId}/{userId}/{fileId} {
      allow read: if isSignedIn() && get(/databases/(default)/documents/groups/$(groupId)).data.memberUserIds.hasAny([request.auth.uid]);
      allow write: if isSignedIn() && request.auth.uid == userId && request.resource.size < 5 * 1024 * 1024;
    }
  }
}
