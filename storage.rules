rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper Function
    function isSignedIn() {
      return request.auth != null;
    }
    
    // User Avatars: Only the user themselves can write to their avatar path.
    // This rule is unchanged and remains secure.
    match /user-avatars/{userId}/{allPaths=**} {
      allow read: if true; // Anyone can read profile pictures
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Group Avatars: The path now includes the owner's UID for authorization.
    // This allows for a simple, secure rule that works for both creation and updates
    // without needing to check Firestore and avoids race conditions.
    match /group-avatars/{ownerId}/{groupId}/{allPaths=**} {
      allow read: if true; // Anyone can read group icons
      
      // Write is allowed ONLY by the user whose UID matches the ownerId in the path.
      allow write: if isSignedIn() && request.auth.uid == ownerId;
    }
  }
}
