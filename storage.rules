
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is a member of a group by reading Firestore.
    function isGroupMember(groupId) {
      return exists(/databases/$(database)/documents/groups/$(groupId)) &&
             request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }

    // User profile pictures: Only the authenticated user can write to their own avatar path.
    // Anyone can read profile pictures.
    match /user-avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Group icons: Only the group owner can write to the group's avatar path.
    // Anyone can read group icons.
    match /group-avatars/{groupId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && 
                    exists(/databases/$(database)/documents/groups/$(groupId)) &&
                    get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId == request.auth.uid;
    }

    // Group media: Only members of the group can upload and read media.
    // We also enforce a 30MB file size limit on writes.
    match /group-media/{groupId}/{allPaths=**} {
      allow read: if request.auth != null && isGroupMember(groupId);
      allow write: if request.auth != null && isGroupMember(groupId) && request.resource.size < 30 * 1024 * 1024;
    }
  }
}
