
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is a member of a group.
    // It first verifies the group document exists, then checks the member list.
    function isMember(groupId) {
      return exists(/databases/$(database)/documents/groups/$(groupId))
        && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds;
    }

    // Rules for user profile pictures.
    // Any user can read, but only the owner can write.
    match /user-avatars/{userId}/avatar.jpg {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // Rules for group icons (avatars).
    // Any user can read, but only the creator of the group can write.
    match /group-avatars/{ownerId}/{groupId}/avatar.jpg {
      allow read: if true;
      allow write: if request.auth.uid == ownerId;
    }

    // Rules for media files shared within a group.
    // Any member of the group can read or write media.
    match /group-media/{groupId}/{fileId} {
      allow read: if isMember(groupId);
      allow write: if isMember(groupId);
    }
  }
}
