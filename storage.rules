
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- USER AVATARS ---
    // A user can only write to their own avatar path.
    // The path is /user-avatars/{userId}/...
    match /user-avatars/{userId}/{allPaths=**} {
      allow read; // Anyone can read profile pictures
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // --- GROUP AVATARS ---
    match /group-avatars/{groupId}/{allPaths=**} {
      allow read; // Anyone can read group icons

      // WRITE: Allow write if the requesting user is the owner of the group document.
      // This now works for both creating and updating an icon, because the app logic
      // ensures the Firestore document exists *before* the upload is attempted.
      allow write: if request.auth != null &&
                   get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId == request.auth.uid;
    }

    // --- GROUP MEDIA (Photos/Videos in chat) ---
    match /group-media/{groupId}/{allPaths=**} {
      // Allow read/write only if the user is a member of the group.
      allow read, write: if request.auth != null &&
                         get(/databases/$(database)/documents/groups/$(groupId)).data.memberUserIds.hasAny([request.auth.uid]);
    }
  }
}
